Архітектура системи
===================

Огляд
-----

Credit Approval App - це веб-додаток на Django з інтегрованими
Machine Learning моделями для прогнозування схвалення кредитних заявок.

Компоненти системи
------------------

Структура проекту
~~~~~~~~~~~~~~~~~

::

    loan-prediction/
    ├── apps/
    │   ├── accounts/       # Автентифікація користувачів
    │   ├── credits/        # Кредитні заявки
    │   ├── analytics/      # Аналітика та графіки
    │   └── api/           # REST API
    ├── ml/                # Machine Learning компоненти
    │   ├── analytics/     # Генерація аналітики
    │   ├── data_transform.py
    │   ├── prediction.py  # Моделі прогнозування
    │   └── services.py    # Сервісний шар
    ├── core/              # Налаштування Django
    ├── ml_data/           # Збережені ML моделі
    ├── media/             # Медіа файли (графіки)
    └── static/            # Статичні файли

Технологічний стек
------------------

Backend
~~~~~~~

* **Django 5.2** - Web framework
* **Django REST Framework** - API
* **PostgreSQL 15** - База даних

Machine Learning
~~~~~~~~~~~~~~~~

* **scikit-learn 1.7** - ML моделі
* **pandas 2.3** - Обробка даних
* **numpy 2.3** - Обчислення
* **joblib** - Серіалізація моделей

Візуалізація
~~~~~~~~~~~~

* **matplotlib 3.10** - Графіки
* **seaborn 0.13** - Статистичні візуалізації

Deployment
~~~~~~~~~~

* **Docker & Docker Compose** - Контейнеризація
* **Gunicorn** - WSGI сервер
* **Nginx** - Reverse proxy
* **Whitenoise** - Статичні файли

Потік даних
-----------

1. **Введення даних користувачем**

   - Через веб-форму (11 кроків)
   - Через REST API

2. **Валідація**

   - Django Forms validation
   - DRF Serializers validation

3. **Трансформація даних**

   - ``transform_input()`` - маппінг полів
   - Конвертація типів

4. **ML Прогнозування**

   - Вибір моделі за режимом
   - Підготовка ознак
   - Обчислення ймовірності
   - Бінарне рішення

5. **Збереження результату**

   - CreditApplication model
   - Зв'язок з користувачем

6. **Відображення результату**

   - Веб-інтерфейс
   - JSON response (API)

Режими прогнозування
---------------------

Mode 1: З кредитною історією
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* Використовує всі 11 ознак
* Поріг прийняття: 0.5
* Найточніший режим

Mode 2: Без кредитної історії
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

* Використовує 10 ознак + 4 інженерні
* Поріг прийняття: 0.35
* Для клієнтів без історії

Mode 3: Ансамбль
~~~~~~~~~~~~~~~~

* Комбінує обидві моделі
* Середнє арифметичне ймовірностей
* Поріг прийняття: 0.5
* Збалансований підхід

База даних
----------

Основні таблиці
~~~~~~~~~~~~~~~

**users**
    Користувачі системи

**credits_creditapplication**
    Кредитні заявки

**credits_predictionconfig**
    Конфігурація режиму прогнозування

**analytics_analyticgraph**
    Метадані аналітичних графіків


Безпека
-------

* **Автентифікація**: Django Auth + Custom User Model
* **Авторизація**: LoginRequiredMixin, permission_classes
* **CSRF захист**: Django middleware
* **SQL Injection**: Django ORM
* **XSS**: Django template escaping
* **Валідація**: Forms + Serializers

Масштабування
-------------

Горизонтальне
~~~~~~~~~~~~~

* Декілька інстансів Django (Gunicorn workers)
* Load balancer (Nginx)
* Розподілена база даних

Вертикальне
~~~~~~~~~~~

* Збільшення ресурсів контейнерів
* Оптимізація запитів БД
* Кешування (Memcached)

Моніторинг
----------

* Логування (Python logging)
